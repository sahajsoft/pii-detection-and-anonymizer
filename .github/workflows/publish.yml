name: Create and publish a Docker image

on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sahajsoft/pii

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Remove software and languages
        # copied from: https://github.com/actions/runner-images/issues/2840#issuecomment-2327466240
        shell: bash
        run: |
          df -h /
          sudo rm -rf \
            "$AGENT_TOOLSDIRECTORY" \
            /opt/google/chrome \
            /opt/microsoft/msedge \
            /opt/microsoft/powershell \
            /opt/pipx \
            /usr/lib/mono \
            /usr/local/julia* \
            /usr/local/lib/android \
            /usr/local/lib/node_modules \
            /usr/local/share/chromium \
            /usr/local/share/powershell \
            /usr/share/dotnet \
            /usr/share/swift
          df -h /
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: DeterminateSystems/flake-checker-action@main
      - name: Build image
        run: nix build .#dockerImage
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Load and push image
        id: push
        run: |
          docker load --input result
          docker tag pii:latest ${{ format('{0}/{1}:latest', env.REGISTRY, env.IMAGE_NAME) }}
          docker push ${{ format('{0}/{1}:latest', env.REGISTRY, env.IMAGE_NAME) }}
          docker tag pii:latest ${{ steps.meta.outputs.tags }}
          docker push ${{ steps.meta.outputs.tags }}
